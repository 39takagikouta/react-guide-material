コンポーネントが最初に定義された一回のみ行ってほしい処理はuseEffectで囲む「

128
依存配列に設定したstateが更新されたらまた処理がされる
正、その処理の中でそのstateを更新したら無限ループになるからだめ

130
依存配列の要素が設定されていないときは、returnでコールバック関数を渡すと、コンポーネントが消えた時にそれが動く
処理の後始末のために用いられるからクリーンナップと呼ばれる
依存配列が設定されているときは、その変更をトリガーに再実行された際にreturnの処理が動く

132useLaryouEffectとの違い
1useEffectより先に動く
2画面に反映されるより先に動く（動画参照）
ちらつきを消すために使う

134
カスタムフックとは、useStateやuseEffectなどを内部で呼んでいる関数
これらは基本的に関数コンポーネントのトップレベルでしか呼べないが、例外的にカスタムフックの中ではいける
useから始める
再利用のために使う

136
dom操作とか、副作用はuseeffectの中に入れる
windowオブジェクトはnode.js上で動かす時にはない
reactの関与しない処理